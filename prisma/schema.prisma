generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int             @id @default(autoincrement())
  fullName     String
  email        String?         @unique
  mobile       String?         @unique
  userName     String          @unique
  password     String
  profileImage String?
  requesters   FollowRequest[] @relation("requester")
  receivers    FollowRequest[] @relation("receiver")
  posts        Post[]
  comments     Comment[]
  likesPost    LikePost[]
  likesComment LikeComment[]
  follower     FollowInfo[]    @relation("follower")
  followed     FollowInfo[]    @relation("followed")
}

model Post {
  id        Int        @id @default(autoincrement())
  caption   String?
  photo     String
  postDate  DateTime   @default(now())
  totalLike Int        @default(0)
  userId    Int
  user      User       @relation(fields: [userId], references: [id])
  comments  Comment[]
  likesPost LikePost[]
}

model Comment {
  id           Int           @id @default(autoincrement())
  message      String
  postDate     DateTime      @default(now())
  userId       Int
  user         User          @relation(fields: [userId], references: [id])
  postId       Int
  post         Post          @relation(fields: [postId], references: [id])
  likesComment LikeComment[]
}

model LikePost {
  id     Int  @id @default(autoincrement())
  userId Int
  user   User @relation(fields: [userId], references: [id])
  postId Int
  post   Post @relation(fields: [postId], references: [id])
}

model LikeComment {
  id        Int     @id @default(autoincrement())
  userId    Int
  user      User    @relation(fields: [userId], references: [id])
  commentId Int
  comment   Comment @relation(fields: [commentId], references: [id])
}

model FollowInfo {
  id         Int  @id @default(autoincrement())
  followed   User @relation("followed", fields: [followedId], references: [id])
  followedId Int
  follower   User @relation("follower", fields: [followerId], references: [id])
  followerId Int
}

model FollowRequest {
  id          Int          @id @default(autoincrement())
  status      FollowStatus
  createAt    DateTime     @default(now())
  requester   User         @relation("requester", fields: [requesterId], references: [id])
  requesterId Int
  receiver    User         @relation("receiver", fields: [receiverId], references: [id])
  receiverId  Int
}

enum FollowStatus {
  ACCEPTED
  PENDING
}
